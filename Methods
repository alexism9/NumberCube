Class NumberCube{

  public int toss(){
}

/*given toss method that returns an integer between 1 and 6,
  assume that the method works
/*

  public static int[] getCubeTosses(NumberCube cube;int numTosses;){
  
    int[]rolls=new int[numTosses];
    
    for(int j=0;j<numTosses;j++;){
      rolls[j]=cube.toss();
}
    return rolls;
}
/* collects result of several tosses of a nuber cube 
/*

  public static getLongestRun(int[]values){
  
//returns starting index of longest repeat cycle of a value

      int startIndex=0; //first place you saw the value
      int indexValue=0; //value you are currently running
      int numAppearances=0; //number of times value has been seen
      
/* if not a repeat of indexValue then
  end previous run/begin new one
  else{numApperances++;} 
/*
      highestIndexSoFar=0; //startIndex of highest run so far
      highestRunCount=0; //highest numAppearances so far

  for(int j=0;j<values.length;j++;){ 
  
      if(values[j]==indexValue;startIndex=[j];numAppearances++;){
      else{
      
        if(numApperances>highestRunCount;){
          
            highestRunCount=numAppearances;
            values[j]=highestIndexSoFar;}
      else{
            startIndex=j;
            values[j]=indexValue;
            numAppearances++;}

  }
}
      

